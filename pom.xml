<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.limemojito.play</groupId>
    <artifactId>order</artifactId>
    <version>0.1.0</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <java.version>1.8</java.version>
        <version.checkstyle>6.17</version.checkstyle>

        <!-- A practical coverage ratio of 90%.  Branch coverage has become flawed in Java 7+ with jacoco. -->
        <coverage.line.ratio>0.9</coverage.line.ratio>
        <coverage.exclude.pattern.1/>
        <coverage.exclude.pattern.2/>
        <coverage.exclude.pattern.3/>
        <coverage.exclude.pattern.4/>
        <coverage.exclude.pattern.5/>
    </properties>

    <!-- Dependencies have versions managed with DependencyManagement section.  This section is for scope configuration -->
    <dependencies>
        <dependency>
            <groupId>org.javamoney</groupId>
            <artifactId>moneta</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>

        <!-- Test Dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <!-- Manage the dependencies so that versions are covered by the transitive closure (ie same versions always). -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.javamoney</groupId>
                <artifactId>moneta</artifactId>
                <version>1.0</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.4</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>1.7.12</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>1.1.3</version>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.12</version>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>1.10.19</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.hamcrest</groupId>
                        <artifactId>hamcrest-core</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <resources>
            <!-- Allow filtering in main resources -->
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <!-- Configure compiler to be strict and against java version -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <showDeprecation>true</showDeprecation>
                    <compilerArgs>
                        <!-- I don't like warnings and fluffy code -->
                        <compilerArg>-Werror</compilerArg>
                        <compilerArg>-Xlint:all</compilerArg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <!-- Some enforcing of versions for build environment and dependencies -->
            <plugin>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.4.1</version>
                <executions>
                    <execution>
                        <id>enforce-versions</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>[3.2.0,)</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>[1.8.0-45,)</version>
                                </requireJavaVersion>
                                <dependencyConvergence/>
                                <requireSameVersions/>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Checkstyle versus a public standards file -->
            <plugin>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.15</version>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>${version.checkstyle}</version>
                        <exclusions>
                            <!--  MCHECKSTYLE-156  -->
                            <exclusion>
                                <groupId>com.sun</groupId>
                                <artifactId>tools</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <configLocation>http://www.limemojito.com/standards/consulting-checkstyle.xml</configLocation>
                    <encoding>UTF-8</encoding>
                    <consoleOutput>true</consoleOutput>
                    <failsOnError>true</failsOnError>
                </configuration>
            </plugin>
            <!-- Code coverage checking with practical coverage ratio and exclusions -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.7.5.201505241946</version>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <!-- We don't care about integration tests having coverage -->
                        <phase>package</phase>
                        <!-- Configuration is here to make it easier to override though use the properties first. -->
                        <configuration>
                            <rules>
                                <rule implementation="org.jacoco.maven.RuleConfiguration">
                                    <element>CLASS</element>
                                    <excludes>
                                        <!-- Exclude for Spring configuration package standard as these are too hard to unit test -->
                                        <exclude>*.config.*</exclude>
                                        <!-- Exclude for *.1 classes produced by the compiler for things like switch statements -->
                                        <exclude>*.?</exclude>
                                        <!-- General exclude patterns from other projects -->
                                        <exclude>${coverage.exclude.pattern.1}</exclude>
                                        <exclude>${coverage.exclude.pattern.2}</exclude>
                                        <exclude>${coverage.exclude.pattern.3}</exclude>
                                        <exclude>${coverage.exclude.pattern.4}</exclude>
                                        <exclude>${coverage.exclude.pattern.5}</exclude>
                                    </excludes>
                                    <limits>
                                        <limit implementation="org.jacoco.report.check.Limit">
                                            <counter>LINE</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${coverage.line.ratio}</minimum>
                                        </limit>
                                        <!-- Give up on branch coverage with jacoco -->
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Configure unit testing plugin -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.18.1</version>
                <configuration>
                    <!-- Include set arglines such as jacoco -->
                    <!--suppress MavenModelInspection -->
                    <argLine>${argLine}</argLine>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>

